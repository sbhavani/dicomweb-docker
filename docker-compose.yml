services:
  # dicomlistener:
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile.dcmtk
  #   container_name: dicomlistener
  #   volumes:
  #     - ./volumes/customer/${CUSTOMER}/uploads:/dcmfiles
  #   ports:
  #     - "32773:104"
  #   command: >
  #     storescp 104 
  #     -v 
  #     -aet INNOVATIONDX 
  #     --output-directory /dicom-data/input
  #     -fe .dcm 
  #     +xa
  #   networks:
  #     - dicom_network

  orthanc:
    image: orthancteam/orthanc:latest
    container_name: orthanc
    ports: [8042:8042]
    env_file:
      - .env
    environment:
      - ORTHANC__STORAGE_DIRECTORY=/var/lib/orthanc/db
      - ORTHANC__WEBDAV_ENABLED=false
      - ORTHANC__ORTHANCEXPLORER2__ISDEFAULTORTHANCUI=true
      - ORTHANC__AWS_S3_STORAGE__BUCKET_NAME=orthanc
      - ORTHANC__AWS_S3_STORAGE__REGION=us-east-1
      - ORTHANC__AWS_S3_STORAGE__ENDPOINT=http://minio:9000
      - ORTHANC__AWS_S3_STORAGE__ACCESS_KEY=minioadmin
      - ORTHANC__AWS_S3_STORAGE__SECRET_KEY=minioadmin
      - ORTHANC__AWS_S3_STORAGE__VIRTUAL_ADDRESSING=false
      - ORTHANC__AWS_S3_STORAGE__FORCE_PATH_STYLE=true
      - ORTHANC__DICOMWEB__ENABLED=true
      - ORTHANC__DICOMWEB__ROOT=/dicom-web/
      - ORTHANC__DICOMWEB__ENABLE_CORS=true
      - ORTHANC__DICOMWEB__ALLOW_ORIGIN=*
    volumes:
      - orthanc-sqlite-storage:/var/lib/orthanc/db
    depends_on:
      minio:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "apt-get update && apt-get install -y curl && curl -f http://localhost:8042/system || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - dicom_network

  minio:
    image: minio/minio:latest
    container_name: minio
    hostname: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_REGION=us-east-1
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - dicom_network

  minio-init:
    image: minio/mc
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      ./scripts/init-minio.sh
      "
    volumes:
      - ./scripts:/scripts
    networks:
      - dicom_network

  ohif:
    image: ohif/app:latest
    container_name: ohif
    ports:
      - "8080:80"
    volumes:
      - ./config/ohif/ohif.js:/usr/share/nginx/html/app-config.js
    networks:
      - dicom_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "3080:80"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      ohif:
        condition: service_started
      orthanc:
        condition: service_healthy
    networks:
      - dicom_network

volumes:
  orthanc-sqlite-storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/orthanc-db
  minio-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/minio-data

networks:
  dicom_network:
    driver: bridge 